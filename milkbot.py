import logging
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ParseMode
import aioredis
import pandasss
from aiogram.types import ParseMode, ReplyKeyboardMarkup, KeyboardButton
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import os



API_TOKEN = '6024972811:AAHcXpcJHMGJn9B0t1pCE_LKqiQWPMLWD7k'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())
dp.middleware.setup(LoggingMiddleware())

# –°–æ–∑–¥–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –∫–æ–¥–∞
class WaitForCode(StatesGroup):
    waiting_for_code = State()

class Back(StatesGroup):
    go_back = State()

start_keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
start_button = KeyboardButton("–°—Ç–∞—Ä—Ç")
start_keyboard.add(start_button)
# –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–¥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
saved_code = {}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    user_id = message.from_user.id

    
    keyboard = ReplyKeyboardMarkup(resize_keyboard=False)

    button1 = KeyboardButton('‚≠ê –£–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–Ω—É—Å–æ–≤')
    keyboard.add(button1)
    button2 = KeyboardButton('üìí –ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏')
    keyboard.add(button2)
    button3 = KeyboardButton('üìç–ê–¥—Ä–µ—Å–∞ —Ñ–∏—Ä–º–µ–Ω–Ω—ã—Ö –∫–∏–æ—Å–∫–æ–≤')
    keyboard.add(button3)
    button4 = KeyboardButton('‚òéÔ∏è–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏')
    keyboard.add(button4)
    button5 = KeyboardButton('ü™© –ú—ã –≤ Instagram')
    keyboard.add(button5)
    button6 = KeyboardButton('üìÉ –£—Å–ª–æ–≤–∏—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª—É–±–∞ ML')
    keyboard.add(button6)
    button7 = KeyboardButton('üíµ –¶–µ–Ω—ã –Ω–∞ —Ç–æ–≤–∞—Ä—ã')
    keyboard.add(button7)
    
    
    await message.reply("–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ! –ú–µ–Ω –∫”©–º–µ–∫—à—ñ –±–æ—Ç MilkyBot. ”ò—Ä–µ–∫–µ—Ç—Ç—ñ —Ç–∞“£–¥–∞“£—ã–∑.", reply_markup=keyboard)
    await message.reply("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ MilkyBot. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ")

    

# ------------------------------------------------------------

@dp.message_handler(Text(equals='‚≠ê –£–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–Ω—É—Å–æ–≤'))
async def hooray(message: types.Message):

    await WaitForCode.waiting_for_code.set()
    # await Back.go_back.set()

    keyboard = ReplyKeyboardMarkup(resize_keyboard=False)
    button1 = KeyboardButton('–ù–∞–∑–∞–¥')
    keyboard.add(button1)

    await message.answer('C”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ! –°—ñ–∑–¥—ñ“£ —à–æ—Ç—ã“£—ã–∑–¥–∞“ì—ã –∂–∏–Ω–∞“õ—Ç–∞–ª“ì–∞–Ω –±–æ–Ω—É—Å—Ç–∞—Ä–¥—ã —Ç–µ–∫—Å–µ—Ä—É “Ø—à—ñ–Ω –±–æ–Ω—É—Å—Ç—ã“õ –∫–∞—Ä—Ç–∞–Ω—ã“£ —à—Ç—Ä–∏—Ö-–∫–æ–¥—ã–Ω –∂—ñ–±–µ—Ä—ñ“£—ñ–∑.', reply_markup=keyboard)

    await message.answer('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —à—Ç—Ä–∏—Ö-–∫–æ–¥ –±–æ–Ω—É—Å–Ω–æ–π –∫–∞—Ä—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤ –Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É.')
   

# --------------------------------------



#–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ —É—Å–ª–æ–≤–∏—è –±–æ–Ω—É—Å–Ω–æ–π –∫–∞—Ä—Ç—ã   
async def send_file(chat_id):
    # –ó–∞–º–µ–Ω–∏—Ç–µ 'file_path' –Ω–∞ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É —Ñ–∞–π–ª—É
    # file_path = 'C:/Users/User/Desktop/milky bot tg/uslov.docx'
    file_path1 = 'C:/Users/User/Desktop/milky bot tg/uslov_rus.docx'
    file_path2 = 'C:/Users/User/Desktop/milky bot tg/uslov_kaz.docx'
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
    with open(file_path1, 'rb') as file1:
        await bot.send_document(chat_id, file1)

    
    with open(file_path2, 'rb') as file2:
        await bot.send_document(chat_id, file2)


# --------------------------------------

# –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
@dp.message_handler(Text(equals='üíµ –¶–µ–Ω—ã –Ω–∞ —Ç–æ–≤–∞—Ä—ã'))
async def hooray(message: types.Message):
    await send_pdf(message.chat.id)


async def send_pdf(chat_id):
    path = os.path.abspath('C:/Users/User/Desktop/milky bot tg/–ü—Ä–∞–π—Å-–ª–∏—Å—Ç —Ñ–∏—Ä–º–µ–Ω–Ω—ã—Ö –∫–∏–æ—Å–∫–æ–≤ ‚ÄúMilkyLand‚Äù.pdf')
    with open(path, 'rb') as pdf_prices:

        await bot.send_document(chat_id, pdf_prices, caption='–¶–µ–Ω—ã –Ω–∞ —Ç–æ–≤–∞—Ä—ã')



#---------------------------------------
@dp.message_handler(Text(equals='üìÉ –£—Å–ª–æ–≤–∏—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª—É–±–∞ ML'))
async def hooray(message: types.Message):
    await message.answer('–°–∞—Ç—ã–ø –∞–ª—É—à—ã –∫–ª—É–±—ã–Ω—ã“£ –µ—Ä–µ–∂–µ–ª–µ—Ä—ñ –º–µ–Ω —à–∞—Ä—Ç—Ç–∞—Ä—ã–Ω –º—ã–Ω–∞ –∂–µ—Ä–¥–µ–Ω –∫”©—Ä—É–≥–µ –±–æ–ª–∞–¥—ã: http://milkyland.kz/club')
    await message.answer('–£—Å–ª–æ–≤–∏—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª—É–±–∞ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç—É—Ç: http://milkyland.kz/club')
    await send_file(message.chat.id)

# --------------------------------------



@dp.message_handler(Text(equals='üìí –ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏'))
async def hooray(message: types.Message):
    await message.answer('–ö–∞—Ç–∞–ª–æ–≥—Ç—ã –∫”©—Ä—É “Ø—à—ñ–Ω —Å—ñ–ª—Ç–µ–º–µ–Ω—ñ –±–∞—Å—ã“£—ã–∑: http://milkyland.kz/product_line')

    await message.answer('–ö–∞—Ç–∞–ª–æ–≥ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ: http://milkyland.kz/product_line')



# --------------------------------------



@dp.message_handler(Text(equals='üìç–ê–¥—Ä–µ—Å–∞ —Ñ–∏—Ä–º–µ–Ω–Ω—ã—Ö –∫–∏–æ—Å–∫–æ–≤'))
async def hooray(message: types.Message):
    await message.answer('https://2gis.kz/aktobe/geo/70000001036503049')
    await message.answer('''
11 –º–∫—Ä., –∑–∞ –¢–î ¬´–ù–µ–∫—Ç–∞—Ä¬ª, –º–∏–Ω–∏-—Ä—ã–Ω–æ–∫ ¬´–¢–∞–±—ã—Å¬ª\n
8 –º–∫—Ä., –∑–∞ –º–∏–Ω–∏ - —Ä—ã–Ω–∫–æ–º, –Ω–∞–ø—Ä–æ—Ç–∏–≤ –º–∞–≥. ¬´–ê–Ω–≤–∞—Ä¬ª\n
12 –º–∫—Ä., –º–∏–Ω–∏ - —Ä—ã–Ω–æ–∫ ¬´–¢–∞–±—ã—Å¬ª\n
—É–ª. 101 –°—Ç—Ä. –±—Ä., –º–∏–Ω–∏ - —Ä—ã–Ω–æ–∫ ¬´–¢–∞–±—ã—Å¬ª\n
–æ—Å—Ç. ¬´–î–æ–º –≤–µ—Ç–µ—Ä–∞–Ω–æ–≤¬ª, –æ–∫–æ–ª–æ ¬´–î–∞—Å—Ç–∞—Ä—Ö–∞–Ω¬ª\n
—Ä-–∏ –ñ–∏–ª–≥–æ—Ä–æ–¥–æ–∫, –º–∏–Ω–∏-—Ä—ã–Ω–æ–∫ ¬´–¢–∞–±—ã—Å¬ª\n
–∂/–º ¬´–ù—É—Ä - –ê–∫—Ç–æ–±–µ, –ö–∞—Ä–≥–∞–ª—ã, 15 (–¢–î ¬´–°–∏—Ç–∏¬ª)\n
—É–ª. –ê–∫—Ç–∞–Ω–æ–≤–∞, 59, –Ω–∞–ø—Ä–æ—Ç–∏–≤ ¬´–ê—Ä–∞–π¬ª\n
—É–ª. –ï—Å–µ—Ç –±–∞—Ç—ã—Ä–∞, 105 –æ–∫–æ–ª–æ –¢–î ¬´–ñ–∞–Ω–∞—Ä¬ª\n
—Ä-–∏ ¬´–ú–∞–ª—ã—à–∫–∞¬ª, —É–ª. –ó–∞–≤–æ–¥—Å–∫–∞—è, 43\n
–ø—Ä. –ê–±–∏–ª–∫–∞–π—ã—Ä-—Ö–∞–Ω–∞, 6, –æ—Å—Ç. ¬´–°–ø—É—Ç–Ω–∏–∫¬ª\n
—É–ª. –°–∞—Ç–ø–∞–µ–≤–∞, 11, 23 —à–∫–æ–ª–∞—É–ª. –®. –ö–∞–ª–¥–∞—è–∫–æ–≤–∞, 276, –æ–∫–æ–ª–æ –¢–î "–°–∞–±—ã—Ä"\n
—É–ª. –®–µ—Ä–Ω–∏—è–∑–∞, 54, –Ω–∞–ø—Ä–æ—Ç–∏–≤ ¬´–ú—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–ª–µ–¥–∂–∞¬ª\n
—É–ª. –ö–µ—Ä–µ–µ–≤–∞, 2–∞, –º–∏–Ω–∏-—Ä—ã–Ω–æ–∫ ¬´–¢–∞–±—ã—Å¬ª\n
—Ä-–Ω –ì–º–∑, —É–ª. –ì–∞—Å—Ç–µ–ª–ª–æ, 185, –º–∏–Ω–∏-—Ä—ã–Ω–æ–∫ ¬´–¢–∞–±—ã—Å¬ª\n
–ø—Ä. –ê. –ú–æ–ª–¥–∞–≥—É–ª–æ–≤–æ–π, 30–∞, —Ä—ã–Ω–æ–∫ "–ê–ª–∏—è", –º–æ–ª–æ—á–Ω—ã–π –æ—Ç–¥–µ–ª\n
–≥. –•—Ä–æ–º—Ç–∞—É, —É–ª. –ï—Å–µ—Ç –±–∞—Ç—ã—Ä–∞, 3–≤, –æ–∫–æ–ª–æ –¢–î ¬´–ë–∞—è–Ω¬ª\n
–≥. –•—Ä–æ–º—Ç–∞—É, –ø—Ä. –ê–±–∞—è, 10 –æ–∫–æ–ª–æ –¢–î ¬´–¥–∞—É–ª–µ—Ç–∏—è—Ä¬ª''')



# --------------------------------------



# –î–ª—è –ø–æ–∫–∞–∑–∞ –Ω–æ–º–µ—Ä–∞ —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏
@dp.message_handler(Text(equals='‚òéÔ∏è–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏'))
async def hooray(message: types.Message):

    await message.answer('“ö–æ–ª–¥–∞—É “õ—ã–∑–º–µ—Ç—ñ –Ω”©–º—ñ—Ä—ñ: +7-771-650-50-04')

    await message.answer('–ù–æ–º–µ—Ä —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏: +7-771-650-50-04')


# --------------------------------------


@dp.message_handler(Text(equals='ü™© –ú—ã –≤ Instagram'))
async def hooray(message: types.Message):
    await message.answer('https://www.instagram.com/p/CpuF1hHM9s2/?igshid=MzRlODBiNWFlZA==')


# --------------------------------------


# –ù–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ª—É—á–∞–π–Ω–æ –Ω–∞–∂–∞–ª –Ω–∞ "–£–∑–Ω–∞—Ç—å –±–æ–Ω—É—Å—ã". –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —à—Ç—Ä–∏—Ö –∫–æ–¥–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–Ω—é
@dp.message_handler(Text(equals='–ù–∞–∑–∞–¥'), state="*")
async def goBack(message: types.Message, state: FSMContext):
    current_state = await state.get_state()

    if current_state == WaitForCode.waiting_for_code.state:
        await state.finish()
    keyboard = ReplyKeyboardMarkup(resize_keyboard=False)

    button1 = KeyboardButton('‚≠ê –£–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–Ω—É—Å–æ–≤')
    keyboard.add(button1)
    button2 = KeyboardButton('üìí –ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏')
    keyboard.add(button2)
    button3 = KeyboardButton('üìç–ê–¥—Ä–µ—Å–∞ —Ñ–∏—Ä–º–µ–Ω–Ω—ã—Ö –∫–∏–æ—Å–∫–æ–≤')
    keyboard.add(button3)
    button4 = KeyboardButton('‚òéÔ∏è–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏')
    keyboard.add(button4)
    button5 = KeyboardButton('ü™© –ú—ã –≤ Instagram')
    keyboard.add(button5)
    button6 = KeyboardButton('üìÉ –£—Å–ª–æ–≤–∏—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª—É–±–∞ ML')
    keyboard.add(button6)
    button7 = KeyboardButton('üíµ –¶–µ–Ω—ã –Ω–∞ —Ç–æ–≤–∞—Ä—ã')
    keyboard.add(button7)
    
    await message.reply("”ò—Ä–µ–∫–µ—Ç—Ç—ñ —Ç–∞“£–¥–∞“£—ã–∑")

    await message.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=keyboard)
    
# --------------------------------------

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —à—Ç—Ä–∏—Ö –∫–æ–¥–∞ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /–£–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–Ω—É—Å–æ–≤
@dp.message_handler(state=WaitForCode.waiting_for_code)
async def save_code(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    print("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ waiting for code –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
    text = message.text

    owner = None

    if text in pandasss.codes:

        saved_code[user_id] = text
        answer, owner = pandasss.bonus_amount(text)
        await state.finish()
        await message.reply(f'–ö–∞—Ä—Ç–∞ –∏–µ—Å—ñ - {owner} \n–°i–∑–¥i“£ —à–æ—Ç—ã“£—ã–∑–¥–∞ {answer} –±–∞–ª–ª')
        await message.reply(f'–í–ª–∞–¥–µ–ª–µ—Ü –∫–∞—Ä—Ç—ã - {owner} \n–ù–∞ —Å—á–µ—Ç—É {answer} –±–∞–ª–ª–æ–≤')

    else:
        # answer = '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ª–∏ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ'
        await message.reply(f'–î–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ“£ –¥“±—Ä—ã—Å –µ–Ω–≥—ñ–∑—ñ–ª–≥–µ–Ω—ñ–Ω —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑')
        await message.reply(f'–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ª–∏ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ')
       
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    
    print('–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ waiting for code –∑–∞–≤–µ—Ä—à–µ–Ω')

    # await message.reply(f'–í–ª–∞–¥–µ–ª–µ—Ü –∫–∞—Ä—Ç—ã - {owner} \n–ù–∞ —Å—á–µ—Ç—É {answer} –±–∞–ª–ª–æ–≤')

# --------------------------------------

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
@dp.message_handler(commands=['showcode'])
async def show_code(message: types.Message):
    user_id = message.from_user.id
    if user_id in saved_code:
        code = saved_code[user_id]
        await message.reply(f"–í–∞—à —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –∫–æ–¥:\n```\n{code}\n```", parse_mode=ParseMode.MARKDOWN)
    else:
        await message.reply("–£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞.")
    await dp.storage.close()


 



@dp.message_handler(commands=["*"])  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª—é–±–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
async def check_state(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    await message.answer(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}")

if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)




